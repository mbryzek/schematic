/* Component Panel */

.component-panel {
    width: 320px;
    background-color: var(--bg-secondary);
    border-left: 1px solid var(--border-color);
    display: flex;
    flex-direction: column;
    overflow: hidden;
    flex-shrink: 0;
}

.panel-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--spacing-md);
    border-bottom: 1px solid var(--border-color);
}

.panel-header h2 {
    font-size: 16px;
    font-weight: 600;
    color: var(--text-primary);
}

.panel-header .btn-small {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 4px;
    background-color: var(--bg-tertiary);
    border: 1px solid var(--border-color);
    color: var(--text-primary);
    cursor: pointer;
    transition: all 0.2s ease;
}

.panel-header .btn-small:hover {
    background-color: var(--accent-primary);
    border-color: var(--accent-primary);
    color: white;
    transform: translateY(-1px);
    box-shadow: var(--shadow-sm);
}

.panel-header .btn-small svg {
    flex-shrink: 0;
}

/* Search Box */
.search-box {
    padding: var(--spacing-md);
    border-bottom: 1px solid var(--border-color);
}

#component-search {
    width: 100%;
    padding: var(--spacing-sm);
    background-color: var(--bg-tertiary);
    border: 1px solid var(--border-color);
    border-radius: 6px;
    font-size: 14px;
    color: var(--text-primary);
    outline: none;
    transition: all 0.2s ease;
}

#component-search:focus {
    border-color: var(--accent-primary);
    box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
}

#component-search::placeholder {
    color: var(--text-tertiary);
}

/* Category Filter */
.category-filter {
    display: flex;
    gap: var(--spacing-xs);
    padding: var(--spacing-sm) var(--spacing-md);
    border-bottom: 1px solid var(--border-color);
    overflow-x: auto;
}

.category-btn {
    padding: 4px 12px;
    background-color: var(--bg-tertiary);
    border: 1px solid var(--border-color);
    border-radius: 16px;
    font-size: 12px;
    color: var(--text-secondary);
    cursor: pointer;
    white-space: nowrap;
    transition: all 0.2s ease;
}

.category-btn:hover {
    background-color: var(--bg-primary);
    border-color: var(--border-hover);
}

.category-btn.active {
    background-color: var(--accent-primary);
    color: white;
    border-color: var(--accent-primary);
}

/* Components List */
.components-list {
    flex: 1;
    overflow-y: auto;
    padding: var(--spacing-md);
}

.component-item {
    display: flex;
    align-items: center;
    padding: var(--spacing-sm);
    background-color: var(--bg-primary);
    border: 1px solid var(--border-color);
    border-radius: 6px;
    margin-bottom: var(--spacing-sm);
    cursor: grab;
    transition: all 0.2s ease;
}

.component-item:hover {
    background-color: var(--component-hover);
    border-color: var(--border-hover);
    transform: translateX(4px);
    box-shadow: var(--shadow-md);
}

.component-item:active {
    cursor: grabbing;
}

.component-item.dragging {
    opacity: 0.5;
}

.component-icon {
    width: 48px;
    height: 48px;
    margin-right: var(--spacing-sm);
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--bg-tertiary);
    border-radius: 4px;
    flex-shrink: 0;
    overflow: hidden;
}

.component-icon svg {
    width: 40px;
    height: 40px;
    display: block;
    overflow: visible;
}

/* Component icon content wrapper */
.component-icon-content {
    /* Allow content to be visible */
}

/* Ensure SVG elements inherit theme colors (sidebar icons) */
.component-icon svg path,
.component-icon svg line,
.component-icon svg circle,
.component-icon svg rect,
.component-icon svg polygon,
.component-icon svg polyline,
.component-icon svg ellipse,
.component-icon svg text {
    stroke: var(--component-stroke);
}

.component-icon svg [fill="currentColor"],
.component-icon svg polygon[fill]:not([fill="none"]),
.component-icon svg path[fill]:not([fill="none"]),
.component-icon svg circle[fill]:not([fill="none"]),
.component-icon svg rect[fill]:not([fill="none"]) {
    fill: var(--component-stroke);
}

/* Override any hardcoded black strokes/fills for theme support */
.component-icon svg [stroke="#000000"],
.component-icon svg [stroke="#000"] {
    stroke: var(--component-stroke) !important;
}

.component-icon svg [fill="#000000"]:not([fill-opacity="0"]),
.component-icon svg [fill="#000"]:not([fill-opacity="0"]) {
    fill: var(--component-stroke) !important;
}

.component-info {
    flex: 1;
}

.component-name {
    font-size: 14px;
    font-weight: 500;
    color: var(--text-primary);
    margin-bottom: 2px;
}

.component-category {
    font-size: 11px;
    color: var(--text-tertiary);
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

/* Empty state */
.components-list-empty {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: var(--spacing-xl);
    text-align: center;
    color: var(--text-tertiary);
}

.components-list-empty svg {
    width: 64px;
    height: 64px;
    margin-bottom: var(--spacing-md);
    opacity: 0.5;
}

.components-list-empty p {
    font-size: 14px;
}
